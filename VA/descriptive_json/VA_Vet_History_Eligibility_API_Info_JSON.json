{"openapi":"3.0.1","info":{"title":"Veteran Service History and Eligibility API","description":"With this API you can\n* Return enrolled benefits for a Veteran.\n* Return a Veteran's enrollment status in minimum essential coverage (MEC) as defined by\nthe Affordable Care Act (ACA).  (restricted access).\n* Return disability ratings of a Veteran.\n* Return certain benefit flashes for a Veteran.\n* Return the service history of a Veteran.\n* Confirm an individual's Title 38 Veteran status.\n\nThis information is more detailed than the information returned by the [The Veteran Confirmation API](https://developer.va.gov/explore/verification/docs/veteran_confirmation?version=current) and as such, is only available to authorized and authenticated consumers.\n\n# Technical overview\n\nYou can use the POST or GET version of each endpoint regardless of your\nauthorization method.\n\n## Using GET endpoints\n\nThe GET endpoint relies on the ICN to find a specific matching Veteran. When\nusing OAuth, the ICN is not required as part of your request. The ICN is\nautomatically added as part of the OAuth launch token context.\n\nWhen using CCG, you must add the ICN in the launch context for the OAuth token.\n\n## Using POST endpoints\n\nPOST endpoints use identifiable information to find a match instead of a\nVeteran's ICN. The required information is listed in the parameter\ndescriptions for these endpoints. Successful responses are received and\nTitle 38 status is checked when a single Veteran's data matches with\nconfidence to the submitted data.\n\n## Authentication and Authorization\n\nThe Veteran Service History and Eligibility API uses OAuth 2.0/OpenID\nConnect. The following authorization models are supported:\n* [Authorization code flow](https://developer.va.gov/explore/authorization/docs/authorization-code?api=veteran_verification)\n* [Client credentials grant](https://developer.va.gov/explore/authorization/docs/client-credentials?api=veteran_verification)\n\n**Important:** To get production access using client credentials grant, you must either work for VA or have specific VA agreements in place. If you have questions, [contact us](https://developer.va.gov/support/contact-us).\n\n## Test the API using Sandbox\n\nWe use [mock test data](https://github.com/department-of-veterans-affairs/vets-api-clients/blob/master/test_accounts/verification_test_accounts.md) in the sandbox environment. APIs accessed via the Sandbox environment are using the same underlying logic as VA's production APIs; only the underlying data store is different.\n\nUse these test user attributes in sandbox to populate the request body as only\ntest users can return a \"CONFIRMED\" response. For sandbox POST requests, only a\ntest user's date of birth and zip code are used to identify a Veteran.\n","contact":{"name":"VA.gov"},"version":"2.0.0"},"servers":[{"url":"https://sandbox-api.va.gov/services/veteran_verification/{version}","description":"Sandbox","variables":{"version":{"default":"v2"}}},{"url":"https://api.va.gov/services/veteran_verification/{version}","description":"Production","variables":{"version":{"default":"v2"}}}],"paths":{"/restricted/aca_coverage":{"post":{"tags":["ACA Coverage"],"summary":"Return a Veteran's enrollment status in minimum essential coverage (MEC) as defined by the Affordable Care Act (ACA). (restricted access).","description":"  This endpoint checks a Veteran's enrollment status for minimum essential\n  coverage (MEC), as defined by the Affordable Care Act (ACA), for a specified\n  date range.\n\n  The response includes a code for Veteran's health benefits status for\n  the request's date range. If the status returned is \"APPLICANT_ENROLLED,\"\n  the response also includes the start and end dates of the coverage. If multiple\n  enrollments are found for the requested date range, multiple start and end dates are\n  returned (limited to the 12 most recent enrollments).\n\n  The ACA Coverage endpoint requires all of the following data elements in your request:\n  * First Name\n  * Last Name\n  * Date of Birth (format: \"yyyy-mm-dd\")\n  * Social Security Number (format: \"000-00-0000\")\n  * ACA Coverage Search Start Date (format: \"yyyy-mm-dd\")\n  * ACA Coverage Search End Date (format: \"yyyy-mm-dd\")\n\n  The required data are utilized to match a Veteran in VA records.\n","operationId":"POST:/restricted/aca_coverage","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VeteranSsnAttributes"},"example":{"person_first_name":"Alfredo","person_last_name":"Armstrong","person_date_of_birth":"1993-06-08","person_ssn_identification":"796-01-2476","aca_coverage_start_date":"2021-09-01","aca_coverage_end_date":"2022-12-31"}}},"required":true},"responses":{"200":{"description":"Enrolled status successfully retrieved","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AcaCoverageResponse"},"example":{"data":{"response_code":"V0000","description":"APPLICANT_ENROLLED","aca_coverage_periods":[{"aca_coverage_start_date":"2021-09-01","aca_coverage_end_date":"2021-09-31"},{"aca_coverage_start_date":"2022-01-01","aca_coverage_end_date":"2022-01-31"}]}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequest"},"example":{"title":"Bad Request","detail":"Bad Request","code":"400","status":"400"}}}},"401":{"description":"Not Authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationError"},"example":{"status":"401","error":"Invalid Token.","path":"/veteran_verification/v2/restricted/aca_coverage"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenServerError"},"example":{"status":"403","error":"Token not granted requested scope.","path":"/veteran_verification/v2/restricted/aca_coverage"}}}},"413":{"description":"Payload too large","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"Request size limit exceeded"}}}}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VhaDataError"},"example":{"errors":[{"title":"V1000 - Data Error/Invalid Request","detail":"Required element invalid or missing in request.","code":"422","status":"422"}]}}}},"429":{"description":"Too many requests","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"API rate limit exceeded"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerApiError"},"example":{"title":"Internal server error","detail":"Internal server error","code":"500","status":"500"}}}},"502":{"description":"Bad Gateway","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VhaSystemError"},"example":{"errors":[{"title":"V1002 - System Error","detail":"System error.","code":"502","status":"502"}]}}}},"503":{"description":"Service Unavailable","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VhaSystemUnavailable"},"example":{"errors":[{"title":"V1001 - Backend Application Unavailable","detail":"Unable to respond, system unavailable.","code":"503","status":"503"}]}}}},"504":{"description":"Gateway Timeout","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"The server took too long to respond"}}}}}},"security":[{"sandboxOauth2":["aca_coverage_restricted.read"]},{"productionOauth2":["aca_coverage_restricted.read"]}]}},"/disability_rating":{"get":{"tags":["Disability Rating"],"summary":"Retrieve the disability rating of a Veteran.","description":"This endpoint provides a Veteran's combined and individual disability ratings and related decisions and dates.","operationId":"GET:/disability_rating","responses":{"200":{"description":"Disability Rating retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DisabilityRatingResponseV2"},"example":{"data":{"id":"12303","type":"disability-rating","attributes":{"combined_disability_rating":100,"combined_effective_date":"2018-03-27","legal_effective_date":"2018-03-27","individual_ratings":[{"decision":"Service Connected","disability_rating_id":"1070379","effective_date":"2018-03-27","rating_end_date":"2022-08-27","rating_percentage":50,"diagnostic_type_code":"0502","hyph_diagnostic_type_code":"1234","diagnostic_type_name":"Schizophrenia, disorganized type","diagnostic_text":"bilateral hearing loss","static_ind":true}]}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequest"},"example":{"title":"Bad Request","detail":"Bad Request","code":"400","status":"400"}}}},"401":{"description":"Not Authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationError"},"example":{"status":"401","error":"Invalid Token.","path":"/veteran_verification/v2/disability_rating"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenServerError"},"example":{"status":"403","error":"Token not granted requested scope.","path":"/veteran_verification/v2/disability_rating"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MissingIcn"},"example":{"title":"Veteran not identifiable.","detail":"No data found for ID or demographics.","code":"404","status":"404"}}}},"413":{"description":"Payload too large","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"Request size limit exceeded"}}}}},"429":{"description":"Too many requests","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"API rate limit exceeded"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerApiError"},"example":{"title":"Internal server error","detail":"Internal server error","code":"500","status":"500"}}}},"502":{"description":"Bad Gateway","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InaccessibleServiceDefintionErrorApiError"}}}},"503":{"description":"Service Unavailable","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BackendServiceApiError"}}}},"504":{"description":"Gateway Timeout","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"The server took too long to respond"}}}}}},"security":[{"sandboxOauth2":["disability_rating.read"]},{"productionOauth2":["disability_rating.read"]}]},"post":{"tags":["Disability Rating"],"summary":"Retrieve the disability rating of a Veteran using demographics to search for the Veteran.","description":"This endpoint provides a Veteran's combined and individual disability ratings and\nrelated decisions and dates.\n\nRequired information:\n* First Name\n* Last Name\n* Date of Birth\n* Street Address\n* City\n* State\n* Country\n* Zipcode\n\nOptional information:\n* Middle Name\n* Gender\n* Mother's Maiden Name\n* Home Phone Number\n* Birth Place City\n* Birth Place State\n* Birth Place Country\n\nTips for finding a match:\n* First and Last Name, Address and DOB are often essential to uniquely identifying\na Veteran.\n* Home Address is recommended, but it may be beneficial to retry the search with\nadditional addresses if they are available and the first attempt is not confirmed.\n* To find a match, it can help to retry with different demographic information,\nsuch as alternate last names or addresses.\n* It can also help to remove special characters, hyphens, apostrophes, or spaces\nin a name prior to matching.\n\nNOTE: In the Sandbox only DOB and ZIP are required to identify the test user.\n","operationId":"POST:/disability_rating","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VeteranAttributes"},"example":{"first_name":"Alfredo","last_name":"Armstrong","birth_date":"1993-06-08","middle_name":"M","gender":"M","street_address_line1":"17020 Tortoise St","street_address_line2":"","street_address_line3":"","city":"Round Rock","zipcode":"78664","state":"TX","country":"USA"}}},"required":true},"responses":{"200":{"description":"Disability Rating retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DisabilityRatingResponseV2"},"example":{"data":{"id":"12303","type":"disability-rating","attributes":{"combined_disability_rating":100,"combined_effective_date":"2018-03-27","legal_effective_date":"2018-03-27","individual_ratings":[{"decision":"Service Connected","disability_rating_id":"1070379","effective_date":"2018-03-27","rating_end_date":"2022-08-27","rating_percentage":50,"diagnostic_type_code":"0502","hyph_diagnostic_type_code":"1234","diagnostic_type_name":"Schizophrenia, disorganized type","diagnostic_text":"bilateral hearing loss","static_ind":true}]}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequest"},"example":{"title":"Bad Request","detail":"Bad Request","code":"400","status":"400"}}}},"401":{"description":"Not Authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationError"},"example":{"status":"401","error":"Invalid Token.","path":"/veteran_verification/v2/disability_rating"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenServerError"},"example":{"status":"403","error":"Token not granted requested scope.","path":"/veteran_verification/v2/disability_rating"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MissingIcn"},"example":{"title":"Veteran not identifiable.","detail":"No data found for ID or demographics.","code":"404","status":"404"}}}},"413":{"description":"Payload too large","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"Request size limit exceeded"}}}}},"429":{"description":"Too many requests","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"API rate limit exceeded"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerApiError"},"example":{"title":"Internal server error","detail":"Internal server error","code":"500","status":"500"}}}},"502":{"description":"Bad Gateway. Also, could indicate Person Not Found in MPI backend.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InaccessibleServiceDefintionErrorApiError"},"example":{"title":"Bad Gateway","detail":"Upstream Request Error.","code":"502","status":"502"}}}},"503":{"description":"Service Unavailable","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BackendServiceApiError"}}}},"504":{"description":"Gateway Timeout","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"The server took too long to respond"}}}}}},"security":[{"sandboxOauth2":["disability_rating.read"]},{"productionOauth2":["disability_rating.read"]}]}},"/restricted/disability_rating":{"post":{"tags":["Disability Rating"],"summary":"Retrieve the disability rating of a Veteran using social security number and demographic information. (restricted access).","description":"This endpoint provides a Veteran's combined and individual disability ratings and\nrelated decisions and dates.  It allows searching for a Veteran using social\nsecurity number and demographic information.\n\nIf using social security number, the following information is required:\n* Social security number\n* First name\n* Last name\n* Birth date\n\nIf using demographic data, the following information is required:\n* First Name\n* Last Name\n* Birth date\n* Street Address\n* City\n* State\n* Country\n* Zipcode\n\nThe following optional information may also be used with social security number\nor demographic data:\n* Middle Name\n* Gender\n* Mother's Maiden Name\n* Home Phone Number\n* Birth Place City\n* Birth Place State\n* Birth Place Country\n\nTips for finding a match:\n* First and Last Name, Address and Birth date are often essential to uniquely\nidentifying a Veteran.\n* Home address is recommended, but it may also help to retry the search with\nadditional available addresses when the first attempt is not confirmed.\n* To find a match, it can help to retry with different demographic information,\nsuch as alternate last names or addresses.\n* It can also help to remove special characters, hyphens, apostrophes, or spaces\nin a name prior to matching.\n\nNOTE: In the Sandbox only birth date and zip code are required to identify the\ntest user.\n","operationId":"POST:/restricted/disability_rating","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FederalVeteranAttributes"},"example":{"ssn":"796-01-2476","first_name":"Alfredo","last_name":"Armstrong","birth_date":"1993-06-08","middle_name":"M","gender":"M","street_address_line1":"17020 Tortoise St","street_address_line2":"","street_address_line3":"","city":"Round Rock","zipcode":"78664","state":"TX","country":"USA"}}},"required":true},"responses":{"200":{"description":"Disability Rating retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DisabilityRatingResponseV2"},"example":{"data":{"id":"12303","type":"disability-rating","attributes":{"combined_disability_rating":100,"combined_effective_date":"2018-03-27","legal_effective_date":"2018-03-27","individual_ratings":[{"decision":"Service Connected","disability_rating_id":"1070379","effective_date":"2018-03-27","rating_end_date":"2022-08-27","rating_percentage":50,"diagnostic_type_code":"0502","hyph_diagnostic_type_code":"1234","diagnostic_type_name":"Schizophrenia, disorganized type","diagnostic_text":"bilateral hearing loss","static_ind":true}]}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequest"},"example":{"title":"Bad Request","detail":"Bad Request","status":"400","code":"400"}}}},"401":{"description":"Not Authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationError"},"example":{"status":"401","error":"Invalid Token.","path":"/veteran_verification/v2/restricted/disability_rating"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenServerError"},"example":{"status":"403","error":"Token not granted requested scope.","path":"/veteran_verification/v2/restricted/disability_rating"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MissingIcn"},"example":{"title":"Veteran not identifiable.","detail":"No data found for ID or demographics.","code":"404","status":"404"}}}},"413":{"description":"Payload too large","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"Request size limit exceeded"}}}}},"429":{"description":"Too many requests","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"API rate limit exceeded"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerApiError"},"example":{"title":"Internal server error","detail":"Internal server error","code":"500","status":"500"}}}},"502":{"description":"Bad Gateway. Also, could indicate Person Not Found in MPI backend.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InaccessibleServiceDefintionErrorApiError"},"example":{"title":"Bad Gateway","detail":"Upstream Request Error.","status":"502","code":"502"}}}},"503":{"description":"Service Unavailable","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BackendServiceApiError"}}}},"504":{"description":"Gateway Timeout","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"The server took too long to respond"}}}}}},"security":[{"sandboxOauth2":["disability_rating_restricted.read"]},{"productionOauth2":["disability_rating_restricted.read"]}]}},"/enrolled_benefits":{"get":{"tags":["Enrolled Benefits"],"summary":"Get enrolled benefits information.","description":"This endpoint returns select enrolled benefits for a Veteran.\nIf the Veteran is enrolled, the codes and names for benefits they are\nreceiving will be returned for the following benefit types:\n\n* Compensation (Code C)\n* 306 Pension (Code 306P)\n* Old Law Pension (Code OLP)\n* Improved Pension (Code IP)\n","operationId":"GET:/enrolled_benefits","responses":{"200":{"description":"Enrolled benefits successfully retrieved","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VeteranEnrolledBenefitsConfirmation"},"example":{"veteran_benefits":[{"program_code":"C","program_name":"","award_effective_date":"2022-01-11T00:00:00Z"}]}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequest"},"example":{"title":"Bad Request","detail":"Bad Request","code":"400","path":"/veteran_verification/v2/enrolled_benefits"}}}},"401":{"description":"Not Authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationError"},"example":{"status":"401","error":"Invalid Token.","path":"/veteran_verification/v2/enrolled_benefits"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenServerError"},"example":{"status":"403","error":"Token not granted requested scope.","path":"/veteran_verification/v2/enrolled_benefits"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MissingIcn"},"example":{"title":"Veteran not identifiable.","detail":"No data found for ID or demographics.","code":"404","status":"404"}}}},"413":{"description":"Payload too large","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"Request size limit exceeded"}}}}},"429":{"description":"Too many requests","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"API rate limit exceeded"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerApiError"},"example":{"title":"Internal server error","detail":"Internal server error","code":"500","status":"500"}}}},"502":{"description":"Bad Gateway","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InaccessibleServiceDefintionErrorApiError"}}}},"503":{"description":"Service Unavailable","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BackendServiceApiError"}}}},"504":{"description":"Gateway Timeout","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"The server took too long to respond"}}}}}},"security":[{"sandboxOauth2":["enrolled_benefits.read"]},{"productionOauth2":["enrolled_benefits.read"]}]},"post":{"tags":["Enrolled Benefits"],"summary":"Get enrolled benefits information using demographics to search for the Veteran.","description":"This endpoint returns select enrolled benefits for a Veteran.\nIf the Veteran is enrolled, the codes and names for benefits they are\nreceiving will be returned for the following benefit types:\n\n* Compensation (Code C)\n* 306 Pension (Code 306P)\n* Old Law Pension (Code OLP)\n* Improved Pension (Code IP)\n\nRequired information:\n* First Name\n* Last Name\n* Date of Birth\n* Street Address\n* City\n* State\n* Country\n* Zipcode\n\nOptional information:\n* Middle Name\n* Gender\n\nTips for finding a match:\n\n* First and Last Name, Address and DOB are often essential to uniquely identifying\na Veteran.\n* Home Address is recommended, but it may be beneficial to retry the search with\nadditional addresses if they are available and the first attempt is not confirmed.\n* To find a match, it can help to retry with different demographic information, such\nas alternate last names or addresses.\n* It can also help to remove special characters, hyphens, apostrophes, or spaces in\na name prior to matching.\n\nNOTE: In the Sandbox only DOB and ZIP are required to identify the test user.\n","operationId":"POST:/enrolled_benefits","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VeteranAttributes"},"example":{"first_name":"Alfredo","last_name":"Armstrong","birth_date":"1993-06-08","middle_name":"M","gender":"M","street_address_line1":"17020 Tortoise St","street_address_line2":"","street_address_line3":"","city":"Round Rock","zipcode":"78664","state":"TX","country":"USA"}}},"required":true},"responses":{"200":{"description":"Enrolled benefits successfully retrieved","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VeteranEnrolledBenefitsConfirmation"},"example":{"veteran_benefits":[{"program_code":"C","program_name":"","award_effective_date":"2022-01-11T00:00:00Z"}]}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequest"},"example":{"title":"Bad Request","detail":"Bad Request","code":"400","status":"400"}}}},"401":{"description":"Not Authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationError"},"example":{"status":"401","error":"Invalid Token.","path":"/veteran_verification/v2/enrolled_benefits"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenServerError"},"example":{"status":"403","error":"Token not granted requested scope.","path":"/veteran_verification/v2/enrolled_benefits"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MissingIcn"},"example":{"title":"Veteran not identifiable.","detail":"No data found for ID or demographics.","code":"404","status":"404"}}}},"413":{"description":"Payload too large","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"Request size limit exceeded"}}}}},"429":{"description":"Too many requests","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"API rate limit exceeded"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerApiError"},"example":{"title":"Internal server error","detail":"Internal server error","code":"500","status":"500"}}}},"502":{"description":"Bad Gateway","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InaccessibleServiceDefintionErrorApiError"}}}},"503":{"description":"Service Unavailable","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BackendServiceApiError"}}}},"504":{"description":"Gateway Timeout","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"The server took too long to respond"}}}}}},"security":[{"sandboxOauth2":["enrolled_benefits.read"]},{"productionOauth2":["enrolled_benefits.read"]}]}},"/flashes":{"get":{"tags":["Flashes"],"summary":"Retrieve certain benefit flashes associated with a Veteran.","description":"A flash is an attribute on a Veteran's profile that describes special\ncircumstances which can apply to a Veteran. Flashes can aid in\nproperly routing claims or determining eligibility for some VA\nbenefits.\n\nThis endpoint currently shares the following flashes\nif they have been assigned to the Veteran.\n\n* Agent Orange (AO) Exposure Verified\n* Gulf War Veteran PACT Eligibility Verified\n\nIf neither of these flashes exist for the Veteran, then a 200 response\nwith an empty dataset will be returned.\n\nIf you have a use case for additional flashes, please\ncontact us with the details.\n","operationId":"GET:/flashes","responses":{"200":{"description":"Returns list of select flashes for a given Veteran","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EligibilityFlashesResponse"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequest"},"example":{"title":"Bad Request","detail":"Bad Request","code":"400","status":"400"}}}},"401":{"description":"Not Authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationError"},"example":{"status":"401","error":"Invalid Token.","path":"/veteran_verification/v2/flashes"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenServerError"},"example":{"status":"403","error":"Token not granted requested scope.","path":"/veteran_verification/v2/flashes"}}}},"413":{"description":"Payload too large","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"Request size limit exceeded"}}}}},"429":{"description":"Too many requests","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"API rate limit exceeded"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerApiError"},"example":{"title":"Internal server error","detail":"Internal server error","code":"500","status":"500"}}}},"502":{"description":"Bad Gateway","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InaccessibleServiceDefintionErrorApiError"}}}},"503":{"description":"Service Unavailable","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BackendServiceApiError"}}}},"504":{"description":"Gateway Timeout","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"The server took too long to respond"}}}}}},"security":[{"sandboxOauth2":["flashes.read"]},{"productionOauth2":["flashes.read"]}]},"post":{"tags":["Flashes"],"summary":"Retrieve certain benefit flashes associated with a Veteran using demographics to search for the Veteran.","description":"A flash is an attribute on a Veteran's profile that describes special\ncircumstances which can apply to a Veteran. Flashes can aid in\nproperly routing claims or determining eligibility for some VA\nbenefits.\n\nThis endpoint currently shares the following flashes\nif they have been assigned to the Veteran.\n\n* Agent Orange (AO) Exposure Verified\n* Gulf War Veteran PACT Eligibility Verified\n\nIf you have a use case for additional flashes, please\ncontact us with the details.\n\nRequired information:\n* First Name\n* Last Name\n* Date of Birth\n* Street Address\n* City\n* State\n* Country\n* Zipcode\n\nOptional information:\n* Middle Name\n* Gender\n\nTips for finding a match:\n* First and Last Name, Address and DOB are often essential to uniquely\nidentifying a Veteran.\n* Home Address is recommended, but it may be beneficial to retry the search with\nadditional addresses if they are available and the first attempt is not confirmed.\n* To find a match, it can help to retry with different demographic information,\nsuch as alternate last names or addresses.\n* It can also help to remove special characters, hyphens, apostrophes, or spaces\nin a name prior to matching.\n\nNOTE: In the Sandbox only DOB and ZIP are required to identify the test user.\n\nIf neither of these flashes exist for the Veteran, then a 200 response\nwith an empty dataset will be returned.\n","operationId":"POST:/flashes","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VeteranAttributes"},"example":{"first_name":"Alfredo","last_name":"Armstrong","birth_date":"1993-06-08","middle_name":"M","gender":"M","street_address_line1":"17020 Tortoise St","street_address_line2":"","street_address_line3":"","city":"Round Rock","zipcode":"78664","state":"TX","country":"USA"}}},"required":true},"responses":{"200":{"description":"Returns list of select flashes for a given Veteran","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EligibilityFlashesResponse"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequest"},"example":{"title":"Bad Request","detail":"Bad Request","code":"400","status":"400"}}}},"401":{"description":"Not Authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationError"},"example":{"status":"401","error":"Invalid Token.","path":"/veteran_verification/v2/flashes"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenServerError"},"example":{"status":"403","error":"Token not granted requested scope.","path":"/veteran_verification/v2/flashes"}}}},"413":{"description":"Payload too large","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"Request size limit exceeded"}}}}},"429":{"description":"Too many requests","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"API rate limit exceeded"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerApiError"},"example":{"title":"Internal server error","detail":"Internal server error","code":"500","status":"500"}}}},"502":{"description":"Bad Gateway","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InaccessibleServiceDefintionErrorApiError"}}}},"503":{"description":"Service Unavailable","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BackendServiceApiError"}}}},"504":{"description":"Gateway Timeout","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"The server took too long to respond"}}}}}},"security":[{"sandboxOauth2":["flashes.read"]},{"productionOauth2":["flashes.read"]}]}},"/service_history":{"get":{"tags":["Service History"],"summary":"Retrieve the service history of a Veteran.","description":"This endpoint provides a Veteran's detailed service history, including all military service episodes with the first and last name of the Veteran, the branch of service, start and end dates, paygrade, discharge status, and separation reason. It also provides start and end dates and locations for each deployment within each episode of service.","operationId":"GET:/service_history","responses":{"200":{"description":"Service History retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServiceHistoryResponse"},"example":{"data":[{"id":"2305d238-dee4-5c98-858a-f912e3c059f8","type":"service-history-episodes","attributes":{"first_name":"Jessie","last_name":"Price","branch_of_service":"Air Force","service_type":"Active Duty","start_date":"1991-05-29","end_date":"2011-06-30","pay_grade":"E07","component_of_service":"Air Force","discharge_status":"honorable","separation_reason":"SUFFICIENT SERVICE FOR RETIREMENT","service_episode_combat_pay":false,"deployments":[{"start_date":"1948-10-10","end_date":"1949-10-09","location":"KOR"}]}}],"militarySummary":{"first_name":"Jessie","last_name":"Price","active_duty_status":"N","combat_service_indicator":true,"duty_status_code":"02","duty_status_text":"Not on active duty: ","total_number_of_regular_active_duty_days":444,"total_number_of_reserve_active_duty_days":90,"total_number_of_guard_active_duty_days":60,"total_number_of_training_days":10}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequest"},"example":{"title":"Bad Request","detail":"Bad Request","code":"400","status":"400"}}}},"401":{"description":"Not Authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationError"},"example":{"status":"401","error":"Invalid Token.","path":"/veteran_verification/v2/service_history"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenServerError"},"example":{"status":"403","error":"Token not granted requested scope.","path":"/veteran_verification/v2/service_history"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MissingIcn"},"example":{"title":"Veteran not identifiable.","detail":"No data found for ID or demographics.","code":"404","status":"404"}}}},"413":{"description":"Payload too large","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"Request size limit exceeded"}}}}},"429":{"description":"Too many requests","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"API rate limit exceeded"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerApiError"},"example":{"title":"Internal server error","detail":"Internal server error","code":"500","status":"500"}}}},"502":{"description":"Bad Gateway","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InaccessibleServiceDefintionErrorApiError"}}}},"503":{"description":"Service Unavailable","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BackendServiceApiError"}}}},"504":{"description":"Gateway Timeout","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"The server took too long to respond"}}}}}},"security":[{"sandboxOauth2":["service_history.read"]},{"productionOauth2":["service_history.read"]}]},"post":{"tags":["Service History"],"summary":"Retrieve the service history of a Veteran using demographics to search for the Veteran.","description":"This endpoint provides a Veteran's detailed service history including all military\nservice episodes with the first and last name of the Veteran, the branch of service,\nstart and end dates, paygrade, discharge status, and separation reason. It also\nprovides start and end dates and locations for each deployment within each episode\nof service.\n\nRequired information:\n* First Name\n* Last Name\n* Date of Birth\n* Street Address\n* City\n* State\n* Country\n* Zipcode\n\nOptional information:\n* Middle Name\n* Gender\n\nTips for finding a match:\n* First and Last Name, Address and DOB are often essential to uniquely identifying a\nVeteran.\n* Home Address is recommended, but it may be beneficial to retry the search with\nadditional addresses if they are available and the first attempt is not confirmed.\n* To find a match, it can help to retry with different demographic information,\nsuch as alternate last names or addresses.\n* It can also help to remove special characters, hyphens, apostrophes, or spaces\nin a name prior to matching.\n\nNOTE: In the Sandbox only DOB and ZIP are required to identify the test user.\n","operationId":"POST:/service_history","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VeteranAttributes"},"example":{"first_name":"Alfredo","last_name":"Armstrong","birth_date":"1993-06-08","middle_name":"M","gender":"M","street_address_line1":"17020 Tortoise St","street_address_line2":"","street_address_line3":"","city":"Round Rock","zipcode":"78664","state":"TX","country":"USA"}}},"required":true},"responses":{"200":{"description":"Service History retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServiceHistoryResponse"},"example":{"data":[{"id":"2305d238-dee4-5c98-858a-f912e3c059f8","type":"service-history-episodes","attributes":{"first_name":"Jessie","last_name":"Price","branch_of_service":"Air Force","service_type":"Active Duty","start_date":"1991-05-29","end_date":"2011-06-30","pay_grade":"E07","component_of_service":"Air Force","discharge_status":"honorable","separation_reason":"SUFFICIENT SERVICE FOR RETIREMENT","service_episode_combat_pay":false,"deployments":[{"start_date":"1948-10-10","end_date":"1949-10-09","location":"KOR"}]}}],"militarySummary":{"first_name":"Jessie","last_name":"Price","active_duty_status":"N","combat_service_indicator":true,"duty_status_code":"02","duty_status_text":"Not on active duty: ","total_number_of_regular_active_duty_days":444,"total_number_of_reserve_active_duty_days":90,"total_number_of_guard_active_duty_days":60,"total_number_of_training_days":10}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequest"},"example":{"title":"Bad Request","detail":"Bad Request","code":"400","status":"400"}}}},"401":{"description":"Not Authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationError"},"example":{"status":"401","error":"Invalid Token.","path":"/veteran_verification/v2/service_history"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenServerError"},"example":{"status":"403","error":"Token not granted requested scope.","path":"/veteran_verification/v2/service_history"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MissingIcn"},"example":{"title":"Veteran not identifiable.","detail":"No data found for ID or demographics.","code":"404","status":"404"}}}},"413":{"description":"Payload too large","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"Request size limit exceeded"}}}}},"429":{"description":"Too many requests","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"API rate limit exceeded"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerApiError"},"example":{"title":"Internal server error","detail":"Internal server error","code":"500","status":"500"}}}},"502":{"description":"Bad Gateway","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InaccessibleServiceDefintionErrorApiError"}}}},"503":{"description":"Service Unavailable","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BackendServiceApiError"}}}},"504":{"description":"Gateway Timeout","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"The server took too long to respond"}}}}}},"security":[{"sandboxOauth2":["service_history.read"]},{"productionOauth2":["service_history.read"]}]}},"/status":{"get":{"tags":["Status"],"summary":"Confirm whether an individual is a Veteran.","description":"Indicates whether an individual is \"Confirmed\" or \"Not Confirmed\" as a [Title 38 Veteran](https://www.ecfr.gov/current/title-38) according to VA.","operationId":"GET:/status","responses":{"200":{"description":"Confirmation status successfully retrieved","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VeteranStatusResponseV2"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequest"},"example":{"title":"Bad Request","detail":"Bad Request","code":"400","status":"400"}}}},"401":{"description":"Not Authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationError"},"example":{"status":"401","error":"Invalid Token.","path":"/veteran_verification/v2/status"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenServerError"},"example":{"status":"403","error":"Token not granted requested scope.","path":"/veteran_verification/v2/status"}}}},"413":{"description":"Payload too large","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"Request size limit exceeded"}}}}},"429":{"description":"Too many requests","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"API rate limit exceeded"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerApiError"},"example":{"title":"Internal server error","detail":"Internal server error","code":"500","status":"500"}}}},"502":{"description":"Bad Gateway","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InaccessibleServiceDefintionErrorApiError"}}}},"503":{"description":"Service Unavailable","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BackendServiceApiError"}}}},"504":{"description":"Gateway Timeout","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"The server took too long to respond"}}}}}},"security":[{"sandboxOauth2":["veteran_status.read"]},{"productionOauth2":["veteran_status.read"]}]},"post":{"tags":["Status"],"summary":"Confirm whether an individual is a Veteran using demographics to search for the Veteran.","description":"Get confirmation about an individual's Veteran status according to the VA. This\nendpoint accepts demographic information for the person to be confirmed and matches\nit against VA records. If there are differences between the data entered and the\ndata on file, a match to a person may not be found. If a successful match is\nidentified, Title 38 Veteran status is checked.\n* \"NOT CONFIRMED\" can mean a matching person was not found using the demographic\ninformation submitted, or it can mean the person was found and is not a \"CONFIRMED\"\nTitle 38 Veteran.\n* Including more parameters results in a better chance of returning an accurate\nstatus.\n* If \"NOT CONFIRMED\" is returned, it can help to try again with different addresses\nor names or optional fields.\n\nRequired information:\n* First Name\n* Last Name\n* Date of Birth\n* Street Address\n* City\n* State\n* Country\n* Zipcode\n\nOptional information:\n* Middle Name\n* Gender\n* Mother's Maiden Name\n* Home Phone Number\n* Birth Place City\n* Birth Place State\n* Birth Place Country\n\nTips for finding a match:\n* First and Last Name, Address and DOB are often essential to uniquely identifying a\nVeteran.\n* To find a match, it can help to retry with different demographic information, such\nas alternate last names or addresses.\n* It can also help to remove special characters, hyphens, apostrophes, or spaces in\na name prior to matching.\n* If needed, Veterans may update their profile with the VA on VA.gov. The updated\ninformation will be available to this API immediately. Additional field-level\nguidance is provided in the schema section of this documentation.\n\nNOTE: In the Sandbox only DOB and ZIP are required to identify the test user.\n","operationId":"POST:/status","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VeteranAttributes"},"example":{"first_name":"Alfredo","last_name":"Armstrong","birth_date":"1993-06-08","middle_name":"M","gender":"M","street_address_line1":"17020 Tortoise St","street_address_line2":"","street_address_line3":"","city":"Round Rock","zipcode":"78664","state":"TX","country":"USA","mothers_maiden_name":"Smith","birth_place_city":"Johnson City","birth_place_state":"MS","birth_place_country":"USA","home_phone_number":"555-555-5555"}}},"required":true},"responses":{"200":{"description":"Confirmation status successfully retrieved","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VeteranStatusResponseV2"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequest"},"example":{"title":"Bad Request","detail":"Bad Request","code":"400","status":"400"}}}},"401":{"description":"Not Authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationError"},"example":{"status":"401","error":"Invalid Token.","path":"/veteran_verification/v2/status"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenServerError"},"example":{"status":"403","error":"Token not granted requested scope.","path":"/veteran_verification/v2/status"}}}},"413":{"description":"Payload too large","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"Request size limit exceeded"}}}}},"429":{"description":"Too many requests","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"API rate limit exceeded"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerApiError"},"example":{"title":"Internal server error","detail":"Internal server error","code":"500","status":"500"}}}},"502":{"description":"Bad Gateway","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InaccessibleServiceDefintionErrorApiError"}}}},"503":{"description":"Service Unavailable","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BackendServiceApiError"}}}},"504":{"description":"Gateway Timeout","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"The server took too long to respond"}}}}}},"security":[{"sandboxOauth2":["veteran_status.read"]},{"productionOauth2":["veteran_status.read"]}]}},"/restricted/status":{"post":{"tags":["Status"],"summary":"Confirm whether an individual is a Veteran using social security number and demographics. (restricted access).","description":"  Confirm an individual's Title 38 Veteran status according to VA. This endpoint\n  matches a social security number and/or demographic information against VA records.\n  If a successful matching Veteran record is found, then the API checks the Title\n  38 Veteran status. If there are differences between the data entered and the data\n  on file, a match may not be found.\n\n  The endpoint returns either \"CONFIRMED\" or \"NOT CONFIRMED\" for Title 38\n  Veteran status:\n  * \"CONFIRMED\" indicates Title 38 Veteran status.\n  * \"NOT CONFIRMED\" means either a matching person was not found using the\n  information submitted, or a person was found, but they are not a confirmed Title 38\n  Veteran.\n\n  If using social security number, the following information is required:\n  * Social security number\n  * First name\n  * Last name\n  * Birth date\n\n  If using demographic data, the following information is required:\n  * First Name\n  * Last Name\n  * Birth date\n  * Street Address\n  * City\n  * State\n  * Country\n  * Zip code\n\n  The following optional information may also be used with social security number or\n  demographic data:\n  * Middle Name\n  * Gender\n  * Mother's Maiden Name\n  * Home Phone Number\n  * Birth Place City\n  * Birth Place State\n  * Birth Place Country\n\n  Tips for finding a match if using only demographic data:\n  * First and Last Name, Address and Birth date are often essential to uniquely identify a\n  Veteran.\n  * Home address is recommended, but it may also help to retry the search with\n  additional available addresses when the first attempt is not confirmed.\n  * To find a match, it can help to retry with different demographic information, such\n  as alternate last names or addresses.\n  * It may also help to remove special characters, hyphens, apostrophes, or spaces\n  in a name prior to matching.\n\n  NOTE: In the Sandbox only birth date and zip code are required to identify the\n  test user.\n","operationId":"POST:/restricted/status","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FederalVeteranAttributes"},"example":{"ssn":"796-01-2476","first_name":"Alfredo","last_name":"Armstrong","birth_date":"1993-06-08","middle_name":"M","gender":"M","street_address_line1":"17020 Tortoise St","street_address_line2":"","street_address_line3":"","city":"Round Rock","zipcode":"78664","state":"TX","country":"USA","mothers_maiden_name":"Smith","birth_place_city":"Johnson City","birth_place_state":"MS","birth_place_country":"USA","home_phone_number":"555-555-5555"}}},"required":true},"responses":{"200":{"description":"Confirmation status successfully retrieved","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VeteranStatusResponseV2"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequest"},"example":{"title":"Bad Request","detail":"Bad Request","code":"400","status":"400"}}}},"401":{"description":"Not Authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationError"},"example":{"status":"401","error":"Invalid Token.","path":"/veteran_verification/v2/restricted/status"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenServerError"},"example":{"status":"403","error":"Token not granted requested scope.","path":"/veteran_verification/v2/restricted/status"}}}},"413":{"description":"Payload too large","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"Request size limit exceeded"}}}}},"429":{"description":"Too many requests","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"API rate limit exceeded"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerApiError"},"example":{"title":"Internal server error","detail":"Internal server error","code":"500","status":"500"}}}},"502":{"description":"Bad Gateway","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InaccessibleServiceDefintionErrorApiError"}}}},"503":{"description":"Service Unavailable","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BackendServiceApiError"}}}},"504":{"description":"Gateway Timeout","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}},"example":{"message":"The server took too long to respond"}}}}}},"security":[{"sandboxOauth2":["status_restricted.read"]},{"productionOauth2":["status_restricted.read"]}]}}},"components":{"schemas":{"VeteranSsnAttributes":{"required":["aca_coverage_end_date","aca_coverage_start_date","person_date_of_birth","person_first_name","person_last_name","person_ssn_identification"],"type":"object","properties":{"person_ssn_identification":{"type":"string"},"person_first_name":{"type":"string"},"person_last_name":{"type":"string"},"person_date_of_birth":{"type":"string","format":"date"},"aca_coverage_start_date":{"type":"string","format":"date"},"aca_coverage_end_date":{"type":"string","format":"date"}}},"ApiErrorDetails":{"type":"object","properties":{"title":{"type":"string","example":"Error title"},"detail":{"type":"string","example":"Detailed error message"},"code":{"type":"string","example":"Error Code"},"status":{"type":"string","example":"Error Code"}}},"BadRequestIcnValidation":{"type":"object","properties":{"errors":{"type":"array","items":{"$ref":"#/components/schemas/ApiErrorDetails"}}},"example":{"errors":[{"title":"Bad Request","detail":"Invalid ICN format.","code":"400","status":"400"}]}},"GatewayError":{"type":"object","properties":{"message":{"type":"string","example":"Too many requests."}},"description":"API Gateway error"},"BadRequest":{"type":"object","properties":{"errors":{"type":"array","items":{"$ref":"#/components/schemas/ApiErrorDetails"}}},"example":{"errors":[{"title":"Bad Request","detail":"Bad Request","code":"400","status":"400"}]}},"AuthorizationError":{"type":"object","properties":{"status":{"type":"string","example":"401"},"error":{"type":"string","example":"Invalid token."},"path":{"type":"string","example":"/veteran_verification/v2/{endpoint}"}}},"ForbiddenServerError":{"type":"object","properties":{"status":{"type":"string","example":"403"},"error":{"type":"string","example":"Token not granted requested scope."},"path":{"type":"string","example":"/veteran_verification/v2/{endpoint}"}}},"InternalServerApiError":{"type":"object","properties":{"errors":{"type":"array","items":{"$ref":"#/components/schemas/ApiErrorDetails"}}},"example":{"errors":[{"title":"Internal server error","detail":"Internal server error","code":"500","status":"500"}]}},"InaccessibleServiceDefintionErrorApiError":{"type":"object","properties":{"errors":{"type":"array","items":{"$ref":"#/components/schemas/ApiErrorDetails"}}},"example":{"errors":[{"title":"Bad Gateway","detail":"Upstream Request Error.","code":"502","status":"502"}]}},"BackendServiceApiError":{"type":"object","properties":{"errors":{"type":"array","items":{"$ref":"#/components/schemas/ApiErrorDetails"}}},"example":{"errors":[{"title":"Service Unavailable","detail":"Backend Service Unavailable.","code":"503","status":"503"}]}},"AcaCoverageData":{"type":"object","properties":{"response_code":{"type":"string","description":"Returns a response code","example":"V0000"},"description":{"type":"string","description":"Defines reason for response code","example":"APPLICANT_ENROLLED"},"aca_coverage_periods":{"type":"array","description":"Returns a list of enrollment coverage periods","items":{"$ref":"#/components/schemas/AcaCoveragePeriods"}}}},"AcaCoveragePeriods":{"type":"object","properties":{"aca_coverage_start_date":{"type":"string","description":"Indicates Enrollment Status Coverage Period start date","example":"2019-10-09"},"aca_coverage_end_date":{"type":"string","description":"Indicates Enrollment Status Coverage Period end date","example":"2019-10-09"}},"description":"Returns a list of enrollment coverage periods"},"AcaCoverageResponse":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/AcaCoverageData"}},"description":"Response codes and descriptions from source system if successful Veteran match is found:<br>V0000 - APPLICANT_ENROLLED<br>V0001 - APPLICANT_NOT_ENROLLED<br>V0002 - APPLICANT_NOT_FOUND<br>V0003 - APPLICANT_DECEASED<br>V0004 - APPLICANT_DECEASED_ENROLLED<br>V0005 - APPLICANT_DECEASED_NOT_ENROLLED<br>"},"VhaDataError":{"type":"object","properties":{"errors":{"type":"array","items":{"$ref":"#/components/schemas/ApiErrorDetails"}}},"example":"    {\n     \"errors\": [\n                 {\n                  \"title\": \"V1000 - Data Error/Invalid Request\",\n                  \"detail\": \"Required element invalid or missing in\n                  request.\",\n                  \"code\": \"422\",\n                  \"status\": \"422\"\n                 }\n               ]\n     }\n"},"VhaSystemError":{"type":"object","properties":{"errors":{"type":"array","items":{"$ref":"#/components/schemas/ApiErrorDetails"}}},"example":{"errors":[{"title":"V1002 - System Error","detail":"System error.","code":"502","status":"502"}]}},"VhaSystemUnavailable":{"type":"object","properties":{"errors":{"type":"array","items":{"$ref":"#/components/schemas/ApiErrorDetails"}}},"example":{"errors":[{"title":"V1001 - Backend Application Unavailable","detail":"Unable to respond, system unavailable.","code":"503","status":"503"}]}},"VeteranStatusConfirmation":{"type":"object","properties":{"veteran_status":{"type":"string","description":"Whether the system could confirm the Veteran status of an individual based on traits\n","enum":["confirmed","not confirmed"]}},"description":"Veteran status confirmation for an individual"},"DisabilityRatingAttributes":{"type":"object","properties":{"combined_disability_rating":{"type":"integer","description":"Monthly disability compensation amount","format":"int32","example":40},"combined_effective_date":{"type":"string","description":"Date the Veteran can start receiving disability benefits (YYYY-mm-dd)","format":"date","example":"2019-10-09"},"legal_effective_date":{"type":"string","description":"Date of a law change that affects a Veteran's disability compensation (YYYY-mm-dd)","format":"date","example":"2019-10-09"},"individual_ratings":{"type":"array","description":"Information about each disability rating, which makes up the combined disability rating","items":{"$ref":"#/components/schemas/IndividualRating"}}}},"DisabilityRatingData":{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string"},"attributes":{"$ref":"#/components/schemas/DisabilityRatingAttributes"}}},"DisabilityRatingResponseV2":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/DisabilityRatingData"}}},"IndividualRating":{"type":"object","properties":{"decision":{"type":"string","description":"Indicates whether the disability is connected to the Veteran's service, and therefore covered.","example":"Service Connected"},"effective_date":{"type":"string","description":"The date the service decision goes into effect (YYYY-mm-dd)","format":"date","example":"2019-10-09"},"rating_end_date":{"type":"string","description":"The date the service decision expires (YYYY-mm-dd)","format":"date","example":"2019-10-09"},"rating_percentage":{"type":"integer","description":"The percentage of the assigned rating, based on the Veteran's disability","format":"int32","example":40},"diagnostic_type_code":{"type":"string","description":"The primary type code of the diagnosis","example":"1134"},"hyph_diagnostic_type_code":{"type":"string","description":"The optional part of the type code of the diagnosis","example":"7502"},"diagnostic_type_name":{"type":"string","description":"The name of the diagnosis","example":"Schizophrenia, disorganized type"},"diagnostic_text":{"type":"string","description":"Text related to the diagnosis","example":"bilateral hearing loss"},"disability_rating_id":{"type":"string","description":"The individual disability rating id","example":"12345"},"static_ind":{"type":"boolean","description":"The purpose of this field is to allow users to make a \"yes\" or \"no\" decision about re-examination for all disabilities that have not been determined to be static.","example":true}},"description":"Information about each disability rating, which makes up the combined disability rating"},"MissingIcn":{"type":"object","properties":{"errors":{"type":"array","items":{"$ref":"#/components/schemas/ApiErrorDetails"}}},"example":{"errors":[{"title":"Veteran not identifiable.","detail":"No data found for ID or demographics.","code":"404","status":"404"}]}},"VeteranAttributes":{"required":["birth_date","city","country","first_name","last_name","street_address_line1","zipcode"],"type":"object","properties":{"gender":{"type":"string","description":"For gender, only 'm' or 'f' will help the search currently."},"first_name":{"type":"string","description":"* Some names may require special handling if a Veteran is not found.\n* Try removing special characters, such as hyphens, apostrophes, and spaces prior to\nmatching. For example, a submission of 'De'Anna' can be matched as 'deanna'.\n* In addition, depending on the handling logic of the front end application updating the VA\nrecord, an inquiry with first name of 'Ann-Marie' would be standardized to 'AnnMarie' but\ncould be matched against 'AnnMarie' or 'Ann Marie' or 'Ann' or 'Marie'.\n* Therefore, if a Veteran with a hyphenated name is not found, it may be useful to retry the\nhyphenated name without the hyphen and together, then separated, then each individual part\nof the name as in the example with 'Ann-Marie'.\n* Capitalization does not impede match strength.\n"},"middle_name":{"type":"string"},"last_name":{"type":"string","description":"* Some names may require special handling if a Veteran is not found.\n* Try removing special characters, such as hyphens, apostrophes, and spaces prior to\nmatching. For example, a submission of 'O'leary' can be matched as 'oleary'.\n* In addition, depending on the handling logic of the front end application updating the\nVA record, an inquiry with last name of 'Smith-Jones' would be standardized to\n'SmithJones' but could be matched against 'SmithJones' or 'Smith Jones' or 'Smith' or\n'Jones'.\n* Therefore, if a Veteran with a hyphenated name is not found, it may be useful to retry\nthe hyphenated name without the hyphen and together, then separated, then each\nindividual part of the name as in the example with 'Smith-Jones'.\n* Capitalization does not impede match strength."},"zipcode":{"type":"string"},"city":{"type":"string"},"state":{"type":"string"},"country":{"type":"string"},"birth_date":{"type":"string","format":"date"},"street_address_line1":{"type":"string"},"street_address_line2":{"type":"string"},"street_address_line3":{"type":"string"},"home_phone_number":{"type":"string"},"birth_place_city":{"type":"string"},"birth_place_state":{"type":"string"},"birth_place_country":{"type":"string"},"mothers_maiden_name":{"type":"string"}},"description":"* Use the current residence address of the Veteran.\n* Some unhoused Veterans can use a local USPS, support organization, or other location\nsuch as 'the corner of RTE512 and U.S.1'.\n* Aim to match the input against the Veteran's demographic information in their VA.gov\nprofile.\n* Data in the request and the VA record is standardized using the same algorithm prior\nto matching. If the data is close, and enough fields are provided, it will find the\nVeteran most of the time; however, some records will have data that is not in sync and\nmay require trying the request again with different addresses, names, or formats.\n* Alternately, the Veteran may need to update their information with the VA if they\nare not found.\n"},"FederalVeteranAttributes":{"required":["birth_date","first_name","last_name","ssn"],"type":"object","properties":{"gender":{"type":"string","description":"For gender, only 'm' or 'f' will help the search currently."},"ssn":{"type":"string","description":"For use by restricted access endpoints only"},"first_name":{"type":"string","description":"* Some names may require special handling if a Veteran is not found.\n* Try removing special characters, such as hyphens, apostrophes, and spaces prior to\nmatching. For example, a submission of 'De'Anna' can be matched as 'deanna'.\n* In addition, depending on the handling logic of the front end application updating the VA\nrecord, an inquiry with first name of 'Ann-Marie' would be standardized to 'AnnMarie' but\ncould be matched against 'AnnMarie' or 'Ann Marie' or 'Ann' or 'Marie'.\n* Therefore, if a Veteran with a hyphenated name is not found, it may be useful to retry the\nhyphenated name without the hyphen and together, then separated, then each individual part\nof the name as in the example with 'Ann-Marie'.\n* Capitalization does not impede match strength.\n"},"middle_name":{"type":"string"},"last_name":{"type":"string","description":"* Some names may require special handling if a Veteran is not found.\n* Try removing special characters, such as hyphens, apostrophes, and spaces prior to\nmatching. For example, a submission of 'O'leary' can be matched as 'oleary'.\n* In addition, depending on the handling logic of the front end application updating the\nVA record, an inquiry with last name of 'Smith-Jones' would be standardized to\n'SmithJones' but could be matched against 'SmithJones' or 'Smith Jones' or 'Smith' or\n'Jones'.\n* Therefore, if a Veteran with a hyphenated name is not found, it may be useful to retry\nthe hyphenated name without the hyphen and together, then separated, then each\nindividual part of the name as in the example with 'Smith-Jones'.\n* Capitalization does not impede match strength."},"zipcode":{"type":"string"},"city":{"type":"string"},"state":{"type":"string"},"country":{"type":"string"},"birth_date":{"type":"string","format":"date"},"street_address_line1":{"type":"string"},"street_address_line2":{"type":"string"},"street_address_line3":{"type":"string"},"home_phone_number":{"type":"string"},"birth_place_city":{"type":"string"},"birth_place_state":{"type":"string"},"birth_place_country":{"type":"string"},"mothers_maiden_name":{"type":"string"}},"description":"* This is the schema for the restricted access endpoints (status and disability_rating).\n* Use the current residence address of the Veteran.\n* Some unhoused Veterans can use a local USPS, support organization, or other location\nsuch as 'the corner of RTE512 and U.S.1'.\n* Aim to match the input against the Veteran's demographic information in their VA.gov\nprofile.\n* Data in the request and the VA record is standardized using the same algorithm prior\nto matching. If the data is close, and enough fields are provided, it will find the\nVeteran most of the time; however, some records will have data that is not in sync and\nmay require trying the request again with different addresses, names, or formats.\n* Alternately, the Veteran may need to update their information with the VA if they\nare not found.\n"},"VeteranEnrolledBenefit":{"required":["program_code"],"type":"object","properties":{"program_code":{"type":"string","description":"The program identifier"},"program_name":{"type":"string","description":"The human readable program name"},"award_effective_date":{"type":"string","format":"date-time"}},"description":"Individual Veteran enrolled benefit"},"VeteranEnrolledBenefitsConfirmation":{"type":"object","properties":{"veteran_benefits":{"type":"array","description":"Array of Veteran enrolled benefits for an individual","items":{"$ref":"#/components/schemas/VeteranEnrolledBenefit"}}},"description":"Veteran enrolled benefits for an individual"},"EligibilityFlashesData":{"type":"object","properties":{"flash_name":{"type":"string"}}},"EligibilityFlashesResponse":{"required":["flashes"],"type":"object","properties":{"flashes":{"type":"array","items":{"$ref":"#/components/schemas/EligibilityFlashesData"}}}},"Deployment":{"required":["end_date","location","start_date"],"type":"object","properties":{"start_date":{"type":"string","description":"beginning of deployment (YYYY-mm-dd)","format":"date","nullable":true,"example":"1948-10-10"},"end_date":{"type":"string","description":"end of deployment (YYYY-mm-dd)","format":"date","nullable":true,"example":"1949-10-09"},"location":{"type":"string","description":"Three letter ISO country code of deployment location","nullable":true,"example":"KOR"}},"description":"Deployment during a service history episode","deprecated":true},"ServiceHistoryAttributes":{"required":["branch_of_service","component_of_service","discharge_status","end_date","first_name","last_name","pay_grade","separation_reason","service_episode_combat_pay","service_type","start_date"],"type":"object","properties":{"deployments":{"type":"array","items":{"$ref":"#/components/schemas/Deployment"}},"first_name":{"type":"string","description":"Veteran first name","nullable":true,"example":"Abraham"},"last_name":{"type":"string","description":"Veteran last name","nullable":true,"example":"Lincoln"},"branch_of_service":{"type":"string","description":"The branch of service such as National Guard, Coast Guard, Reserves, Army, Navy, Air Force, Marines","example":"Army"},"component_of_service":{"type":"string","description":"A component of service such as Reserves, National Guard","example":"Reserves"},"service_type":{"type":"string","description":"If veteran is on active duty or not","example":"Active Duty"},"start_date":{"type":"string","description":"start date of a service history episode (YYYY-mm-dd)","format":"date","nullable":true,"example":"1948-04-08"},"end_date":{"type":"string","description":"end date of a service history episode (YYYY-mm-dd)","format":"date","nullable":true,"example":"1950-05-10"},"pay_grade":{"type":"string","description":"Defines the level of compensation for a position, normalized across military branches.\n\nPossible values include the concatenation of Pay Plan Code and Pay Grade Code.\nPay Plan Code is represented as a two-character code, and can be one of five values:\n  - CC (Commissioned Corps)\n  - MC (Cadet)\n  - ME (Enlisted)\n  - MO (Officer)\n  - MW (Warrant Officer)\n\nPay Grade Code is a value between 01 and 10.\n\nPay Plan Code is concatenated with Pay Grade Code to determine the full Pay Grade value, with the leading character (M or C) stripped from Pay Plan Code.","example":"W01"},"discharge_status":{"type":"string","description":"Character of discharge from service episode. Possible values are:\n\nBoth \"honorable-for-va-purposes\" and \"dishonorable-for-va-purposes\" represent a change in character of discharge based on an administrative decision, for purposes of VA benefits administration. The original character of discharge for other purposes was either \"bad-conduct\" or \"other-than-honorable\". \"honorable-absence-of-negative-report\" represents an unreported character of service that the Department of Defense classifies as honorable.","nullable":true,"example":"HONORABLE","enum":["honorable","general","bad-conduct","other-than-honorable","dishonorable","honorable-absence-of-negative-report","honorable-for-va-purposes","dishonorable-for-va-purposes","uncharacterized","unknown"]},"separation_reason":{"type":"string","description":"Additional text description for separation reason beyond discharge_status value","example":"SUFFICIENT SERVICE FOR RETIREMENT"},"service_episode_combat_pay":{"type":"boolean","description":"If there is any combat pay in the VA Profile service's CombatPayBio with the same serviceEpisodeIdentifier, then indicate Y","nullable":true,"example":false}},"description":"Attributes for service_history endpoint"},"ServiceHistoryEpisode":{"required":["attributes","id","type"],"type":"object","properties":{"id":{"type":"string","description":"Service History Episode ID","example":"12312AASDf"},"type":{"type":"string","example":"service-history-episodes"},"attributes":{"$ref":"#/components/schemas/ServiceHistoryAttributes"}},"description":"Service history for authorized Veteran"},"ServiceHistoryMilitarySummary":{"required":["active_duty_status","combat_service_indicator","duty_status_code","duty_status_text","first_name","last_name","total_number_of_guard_active_duty_days","total_number_of_regular_active_duty_days","total_number_of_reserve_active_duty_days","total_number_of_training_days"],"type":"object","properties":{"first_name":{"type":"string","description":"Veteran first name","nullable":true,"example":"Abraham"},"last_name":{"type":"string","description":"Veteran last name","nullable":true,"example":"Lincoln"},"active_duty_status":{"type":"string","description":"Indicates the Veteran's current active duty status","nullable":true,"example":"false"},"combat_service_indicator":{"type":"boolean","description":"Indicates whether the service member has ever been a part of active combat duty","nullable":true,"example":false},"duty_status_code":{"type":"string","description":"Describes the individual's status","nullable":true,"example":"A"},"duty_status_text":{"type":"string","description":"Relates to an individual's affiliation with the US Military.","nullable":true,"example":"Active Component = full time active duty, not in the Guard or Reserve"},"total_number_of_regular_active_duty_days":{"type":"integer","description":"Total number of regular active duty days","format":"int32","nullable":true,"example":100},"total_number_of_reserve_active_duty_days":{"type":"integer","description":"Total number of reserve active duty days","format":"int32","nullable":true,"example":100},"total_number_of_guard_active_duty_days":{"type":"integer","description":"Total number of guard active duty days","format":"int32","nullable":true,"example":100},"total_number_of_training_days":{"type":"integer","description":"Total number of training days","format":"int32","nullable":true,"example":100}},"description":"Military Summary for Veteran"},"ServiceHistoryResponse":{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/ServiceHistoryEpisode"}},"military_summary":{"$ref":"#/components/schemas/ServiceHistoryMilitarySummary"}},"description":"verification service_history endpoint","deprecated":true},"VeteranStatusAttributes":{"type":"object","properties":{"veteran_status":{"type":"string","description":"Whether the system could confirm the Veteran status of the authorized individual\n","enum":["confirmed","not confirmed"]},"not_confirmed_reason":{"type":"string","description":"Defines reason for a not confirmed status response."}}},"VeteranStatusDetails":{"type":"object","properties":{"id":{"type":"string","description":"Confirmation ICN or EDIPI","example":"1012667145V762142, 1244307390"},"type":{"type":"string","example":"veteran_status_confirmations"},"attributes":{"$ref":"#/components/schemas/VeteranStatusAttributes"}},"description":"Veteran status confirmation for an individual"},"VeteranStatusResponseV2":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/VeteranStatusDetails"}}}},"securitySchemes":{"productionOauth2":{"type":"oauth2","description":"This API uses OAuth 2 with the authorization code grant flow.","flows":{"authorizationCode":{"authorizationUrl":"https://api.va.gov/oauth2/veteran-verification/system/v1/authorization","tokenUrl":"https://api.va.gov/oauth2/veteran-verification/system/v1/token","scopes":{"aca_coverage_restricted.read":"Return a Veteran's enrollment status in minimum essential coverage (MEC) as defined by the Affordable Care Act (ACA).  (restricted access).","disability_rating.read":"Retrieve Disability Rating","disability_rating_restricted.read":"For approved federal consumers, view a Veteran's VA disability ratings and their effective dates using social security number and demographic information.","enrolled_benefits.read":"Retrieve Veteran Enrolled Benefits","flashes.read":"Retrieve Flashes","service_history.read":"Retrieve Service History","status_restricted.read":"For approved federal consumers, confirm the Veteran status of an individual using social security number and demographic information.","veteran_status.read":"Retrieve Veteran Status"}}}},"sandboxOauth2":{"type":"oauth2","description":"This API uses OAuth 2 with the authorization code grant flow.","flows":{"authorizationCode":{"authorizationUrl":"https://sandbox-api.va.gov/oauth2/veteran-verification/system/v1/authorization","tokenUrl":"https://sandbox-api.va.gov/oauth2/veteran-verification/system/v1/token","scopes":{"aca_coverage_restricted.read":"Return a Veteran's enrollment status in minimum essential coverage (MEC) as defined by the Affordable Care Act (ACA).  (restricted access).","disability_rating.read":"Retrieve Disability Rating","disability_rating_restricted.read":"For approved federal consumers, view a Veteran's VA disability ratings and their effective dates using social security number and demographic information.","enrolled_benefits.read":"Retrieve Veteran Enrolled Benefits","flashes.read":"Retrieve Flashes","service_history.read":"Retrieve Service History","status_restricted.read":"For approved federal consumers, confirm the Veteran status of an individual using social security number and demographic information.","veteran_status.read":"Retrieve Veteran Status"}}}}}}}